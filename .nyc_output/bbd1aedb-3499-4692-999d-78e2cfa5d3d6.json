{"/home/burgardt/projects/challenge/temperature-project/src/plugins/openweather.ts":{"path":"/home/burgardt/projects/challenge/temperature-project/src/plugins/openweather.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":25},"end":{"line":3,"column":50}},"2":{"start":{"line":4,"column":22},"end":{"line":4,"column":44}},"3":{"start":{"line":5,"column":0},"end":{"line":24,"column":3}},"4":{"start":{"line":6,"column":4},"end":{"line":23,"column":7}},"5":{"start":{"line":8,"column":135},"end":{"line":8,"column":146}},"6":{"start":{"line":9,"column":12},"end":{"line":21,"column":13}},"7":{"start":{"line":10,"column":33},"end":{"line":10,"column":149}},"8":{"start":{"line":11,"column":29},"end":{"line":11,"column":50}},"9":{"start":{"line":12,"column":16},"end":{"line":17,"column":17}},"10":{"start":{"line":13,"column":20},"end":{"line":13,"column":40}},"11":{"start":{"line":16,"column":20},"end":{"line":16,"column":75}},"12":{"start":{"line":20,"column":16},"end":{"line":20,"column":39}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":48},"end":{"line":5,"column":49}},"loc":{"start":{"line":5,"column":73},"end":{"line":24,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":24},"end":{"line":7,"column":25}},"loc":{"start":{"line":7,"column":44},"end":{"line":22,"column":9}},"line":7}},"branchMap":{"0":{"loc":{"start":{"line":12,"column":16},"end":{"line":17,"column":17}},"type":"if","locations":[{"start":{"line":12,"column":16},"end":{"line":17,"column":17}},{"start":{"line":12,"column":16},"end":{"line":17,"column":17}}],"line":12},"1":{"loc":{"start":{"line":16,"column":36},"end":{"line":16,"column":73}},"type":"cond-expr","locations":[{"start":{"line":16,"column":51},"end":{"line":16,"column":63}},{"start":{"line":16,"column":66},"end":{"line":16,"column":73}}],"line":16}},"s":{"0":3,"1":3,"2":3,"3":3,"4":3,"5":3,"6":3,"7":3,"8":3,"9":2,"10":1,"11":1,"12":2},"f":{"0":3,"1":3},"b":{"0":[1,1],"1":[1,0]},"inputSourceMap":{"version":3,"file":"/home/burgardt/projects/challenge/temperature-project/src/plugins/openweather.ts","sources":["/home/burgardt/projects/challenge/temperature-project/src/plugins/openweather.ts"],"names":[],"mappings":";;AAAA,mDAA+B;AAC/B,6CAAgC;AAEhC,kBAAe,IAAA,wBAAE,EAAM,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE;IAC3C,OAAO,CAAC,QAAQ,CACZ,aAAa,EACb;QACI,cAAc,EAAE,KAAK,EAAE,GAAW,EAAE,GAAW,EAAE,EAAE;YAC/C,MAAM,EAAE,mBAAmB,EAAE,MAAM,EAAE,iBAAiB,EAAE,KAAK,EAAE,kBAAkB,EAAE,KAAK,EAAE,mBAAmB,EAAE,OAAO,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC;YAEvI,IAAI;gBACA,MAAM,QAAQ,GAAG,MAAM,IAAA,qBAAK,EAAC,GAAG,MAAM,QAAQ,GAAG,QAAQ,GAAG,UAAU,KAAK,UAAU,KAAK,YAAY,OAAO,EAAE,CAAC,CAAA;gBAChH,MAAM,IAAI,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAA;gBAElC,IAAI,IAAI,CAAC,OAAO,EAAE;oBACd,OAAO,IAAI,CAAC,OAAO,CAAA;iBACtB;qBAAM;oBACH,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAA;iBACzD;aACJ;YAAC,OAAO,KAAU,EAAE;gBACjB,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,CAAA;aACzB;QACL,CAAC;KACJ,CACJ,CAAA;AACL,CAAC,CAAC,CAAA","sourcesContent":["import fp from 'fastify-plugin'\nimport fetch from 'cross-fetch';\n\nexport default fp<any>(async (fastify, opts) => {\n    fastify.decorate(\n        'openweather', \n        {\n            getTemperature: async (lat: number, lon: number) => {\n                const { OPENWEATHER_API_URL: apiUrl, OPENWEATHER_UNITS: units, OPENWEATHER_APP_ID: appId, OPENWEATHER_EXCLUDE: exclude } = process.env;\n\n                try {\n                    const response = await fetch(`${apiUrl}?lat=${lat}&lon=${lon}&appid=${appId}&units=${units}&exclude=${exclude}`)\n                    const data = await response.json()\n                    \n                    if (data.current) {\n                        return data.current\n                    } else {\n                        throw new Error(data.message ? data.message : \"Error\")\n                    }\n                } catch (error: any) {\n                    throw new Error(error)\n                }\n            }\n        }\n    )\n})\n\n\ndeclare module 'fastify' {\n    export interface FastifyInstance {\n        openweather: {\n            getTemperature: (lat: number, lon: number) => Promise<any>\n        }\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8d542669d61e490b483119dd9135b47417de4b45","contentHash":"1db08da41ac91af978da51a3dd70bde939228c2171f20ada785607917e63273d"}}