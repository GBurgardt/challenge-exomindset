{"/home/burgardt/projects/challenge/temperature-project/src/app.ts":{"path":"/home/burgardt/projects/challenge/temperature-project/src/app.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":21}},"2":{"start":{"line":4,"column":15},"end":{"line":4,"column":30}},"3":{"start":{"line":5,"column":27},"end":{"line":5,"column":54}},"4":{"start":{"line":6,"column":12},"end":{"line":15,"column":1}},"5":{"start":{"line":7,"column":4},"end":{"line":10,"column":7}},"6":{"start":{"line":11,"column":4},"end":{"line":14,"column":7}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":18}},"8":{"start":{"line":17,"column":0},"end":{"line":17,"column":22}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":12},"end":{"line":6,"column":13}},"loc":{"start":{"line":6,"column":37},"end":{"line":15,"column":1}},"line":6}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1},"f":{"0":1},"b":{},"inputSourceMap":{"version":3,"file":"/home/burgardt/projects/challenge/temperature-project/src/app.ts","sources":["/home/burgardt/projects/challenge/temperature-project/src/app.ts"],"names":[],"mappings":";;;AAAA,+BAA4B;AAC5B,uDAAiE;AAKjE,MAAM,GAAG,GAAmC,KAAK,EAC7C,OAAO,EACP,IAAI,EACS,EAAE;IAEjB,KAAK,OAAO,CAAC,QAAQ,CAAC,0BAAQ,EAAE;QAC9B,GAAG,EAAE,IAAA,WAAI,EAAC,SAAS,EAAE,SAAS,CAAC;QAC/B,OAAO,EAAE,IAAI;KACd,CAAC,CAAA;IAEF,KAAK,OAAO,CAAC,QAAQ,CAAC,0BAAQ,EAAE;QAC9B,GAAG,EAAE,IAAA,WAAI,EAAC,SAAS,EAAE,QAAQ,CAAC;QAC9B,OAAO,EAAE,IAAI;KACd,CAAC,CAAA;AAEJ,CAAC,CAAC;AAGO,kBAAG;AADZ,kBAAe,GAAG,CAAC","sourcesContent":["import { join } from 'path';\nimport AutoLoad, {AutoloadPluginOptions} from 'fastify-autoload';\nimport { FastifyPluginAsync } from 'fastify';\n\nexport type AppOptions = { } & Partial<AutoloadPluginOptions>;\n\nconst app: FastifyPluginAsync<AppOptions> = async (\n    fastify,\n    opts\n): Promise<void> => {\n  \n  void fastify.register(AutoLoad, {\n    dir: join(__dirname, 'plugins'),\n    options: opts\n  })\n\n  void fastify.register(AutoLoad, {\n    dir: join(__dirname, 'routes'),\n    options: opts\n  })\n\n};\n\nexport default app;\nexport { app }\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a18567e499a55c0b9b5dbe3d6366f838784f549d","contentHash":"6a2062e0a7de38ccc686d50b446d0d9001dfcac8d3573b46e6b11c37167be1b5"},"/home/burgardt/projects/challenge/temperature-project/src/plugins/openweather.ts":{"path":"/home/burgardt/projects/challenge/temperature-project/src/plugins/openweather.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":25},"end":{"line":3,"column":50}},"2":{"start":{"line":4,"column":22},"end":{"line":4,"column":44}},"3":{"start":{"line":5,"column":0},"end":{"line":24,"column":3}},"4":{"start":{"line":6,"column":4},"end":{"line":23,"column":7}},"5":{"start":{"line":8,"column":135},"end":{"line":8,"column":146}},"6":{"start":{"line":9,"column":12},"end":{"line":21,"column":13}},"7":{"start":{"line":10,"column":33},"end":{"line":10,"column":149}},"8":{"start":{"line":11,"column":29},"end":{"line":11,"column":50}},"9":{"start":{"line":12,"column":16},"end":{"line":17,"column":17}},"10":{"start":{"line":13,"column":20},"end":{"line":13,"column":40}},"11":{"start":{"line":16,"column":20},"end":{"line":16,"column":75}},"12":{"start":{"line":20,"column":16},"end":{"line":20,"column":39}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":48},"end":{"line":5,"column":49}},"loc":{"start":{"line":5,"column":73},"end":{"line":24,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":24},"end":{"line":7,"column":25}},"loc":{"start":{"line":7,"column":44},"end":{"line":22,"column":9}},"line":7}},"branchMap":{"0":{"loc":{"start":{"line":12,"column":16},"end":{"line":17,"column":17}},"type":"if","locations":[{"start":{"line":12,"column":16},"end":{"line":17,"column":17}},{"start":{"line":12,"column":16},"end":{"line":17,"column":17}}],"line":12},"1":{"loc":{"start":{"line":16,"column":36},"end":{"line":16,"column":73}},"type":"cond-expr","locations":[{"start":{"line":16,"column":51},"end":{"line":16,"column":63}},{"start":{"line":16,"column":66},"end":{"line":16,"column":73}}],"line":16}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"f":{"0":1,"1":0},"b":{"0":[0,0],"1":[0,0]},"inputSourceMap":{"version":3,"file":"/home/burgardt/projects/challenge/temperature-project/src/plugins/openweather.ts","sources":["/home/burgardt/projects/challenge/temperature-project/src/plugins/openweather.ts"],"names":[],"mappings":";;AAAA,mDAA+B;AAC/B,6CAAgC;AAEhC,kBAAe,IAAA,wBAAE,EAAM,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE;IAC3C,OAAO,CAAC,QAAQ,CACZ,aAAa,EACb;QACI,cAAc,EAAE,KAAK,EAAE,GAAW,EAAE,GAAW,EAAE,EAAE;YAC/C,MAAM,EAAE,mBAAmB,EAAE,MAAM,EAAE,iBAAiB,EAAE,KAAK,EAAE,kBAAkB,EAAE,KAAK,EAAE,mBAAmB,EAAE,OAAO,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC;YAEvI,IAAI;gBACA,MAAM,QAAQ,GAAG,MAAM,IAAA,qBAAK,EAAC,GAAG,MAAM,QAAQ,GAAG,QAAQ,GAAG,UAAU,KAAK,UAAU,KAAK,YAAY,OAAO,EAAE,CAAC,CAAA;gBAChH,MAAM,IAAI,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAA;gBAElC,IAAI,IAAI,CAAC,OAAO,EAAE;oBACd,OAAO,IAAI,CAAC,OAAO,CAAA;iBACtB;qBAAM;oBACH,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAA;iBACzD;aACJ;YAAC,OAAO,KAAU,EAAE;gBACjB,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,CAAA;aACzB;QACL,CAAC;KACJ,CACJ,CAAA;AACL,CAAC,CAAC,CAAA","sourcesContent":["import fp from 'fastify-plugin'\nimport fetch from 'cross-fetch';\n\nexport default fp<any>(async (fastify, opts) => {\n    fastify.decorate(\n        'openweather', \n        {\n            getTemperature: async (lat: number, lon: number) => {\n                const { OPENWEATHER_API_URL: apiUrl, OPENWEATHER_UNITS: units, OPENWEATHER_APP_ID: appId, OPENWEATHER_EXCLUDE: exclude } = process.env;\n\n                try {\n                    const response = await fetch(`${apiUrl}?lat=${lat}&lon=${lon}&appid=${appId}&units=${units}&exclude=${exclude}`)\n                    const data = await response.json()\n                    \n                    if (data.current) {\n                        return data.current\n                    } else {\n                        throw new Error(data.message ? data.message : \"Error\")\n                    }\n                } catch (error: any) {\n                    throw new Error(error)\n                }\n            }\n        }\n    )\n})\n\n\ndeclare module 'fastify' {\n    export interface FastifyInstance {\n        openweather: {\n            getTemperature: (lat: number, lon: number) => Promise<any>\n        }\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8d542669d61e490b483119dd9135b47417de4b45","contentHash":"1db08da41ac91af978da51a3dd70bde939228c2171f20ada785607917e63273d"},"/home/burgardt/projects/challenge/temperature-project/src/plugins/sensible.ts":{"path":"/home/burgardt/projects/challenge/temperature-project/src/plugins/sensible.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":25},"end":{"line":3,"column":50}},"2":{"start":{"line":4,"column":27},"end":{"line":4,"column":54}},"3":{"start":{"line":5,"column":0},"end":{"line":9,"column":3}},"4":{"start":{"line":6,"column":4},"end":{"line":8,"column":7}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":48},"end":{"line":5,"column":49}},"loc":{"start":{"line":5,"column":73},"end":{"line":9,"column":1}},"line":5}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1},"f":{"0":1},"b":{},"inputSourceMap":{"version":3,"file":"/home/burgardt/projects/challenge/temperature-project/src/plugins/sensible.ts","sources":["/home/burgardt/projects/challenge/temperature-project/src/plugins/sensible.ts"],"names":[],"mappings":";;AAAA,mDAA+B;AAC/B,uDAA4D;AAE5D,kBAAe,IAAA,wBAAE,EAAkB,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE;IACzD,OAAO,CAAC,QAAQ,CAAC,0BAAQ,EAAE;QACzB,YAAY,EAAE,KAAK;KACpB,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA","sourcesContent":["import fp from 'fastify-plugin'\nimport sensible, { SensibleOptions } from 'fastify-sensible'\n\nexport default fp<SensibleOptions>(async (fastify, opts) => {\n  fastify.register(sensible, {\n    errorHandler: false\n  })\n})\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"70754d309cd74202192b082e0aa51188efbe3032","contentHash":"1ba3823bc704947c709816093ef55cad01bd23a2b920b1eb9a5cb247d262e068"},"/home/burgardt/projects/challenge/temperature-project/src/routes/root.ts":{"path":"/home/burgardt/projects/challenge/temperature-project/src/routes/root.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":13},"end":{"line":7,"column":1}},"2":{"start":{"line":4,"column":4},"end":{"line":6,"column":7}},"3":{"start":{"line":5,"column":8},"end":{"line":5,"column":35}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":23}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":14}},"loc":{"start":{"line":3,"column":38},"end":{"line":7,"column":1}},"line":3},"1":{"name":"(anonymous_1)","decl":{"start":{"line":4,"column":21},"end":{"line":4,"column":22}},"loc":{"start":{"line":4,"column":53},"end":{"line":6,"column":5}},"line":4}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1},"f":{"0":1,"1":1},"b":{},"inputSourceMap":{"version":3,"file":"/home/burgardt/projects/challenge/temperature-project/src/routes/root.ts","sources":["/home/burgardt/projects/challenge/temperature-project/src/routes/root.ts"],"names":[],"mappings":";;AAEA,MAAM,IAAI,GAAuB,KAAK,EAAE,OAAO,EAAE,IAAI,EAAiB,EAAE;IACtE,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,WAAW,OAAO,EAAE,KAAK;QAC7C,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,CAAA;IAC5B,CAAC,CAAC,CAAA;AACJ,CAAC,CAAA;AAED,kBAAe,IAAI,CAAC","sourcesContent":["import { FastifyPluginAsync } from 'fastify'\n\nconst root: FastifyPluginAsync = async (fastify, opts): Promise<void> => {\n  fastify.get('/', async function (request, reply) {\n    return { challenge: true }\n  })\n}\n\nexport default root;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7324668bc85bcdebddd612a6e656b3b527cef07f","contentHash":"fa36b49ff22c7f54bd2156e95428b792aaab36f46c2eb89e565709ba7caed44e"},"/home/burgardt/projects/challenge/temperature-project/src/routes/temperature/index.ts":{"path":"/home/burgardt/projects/challenge/temperature-project/src/routes/temperature/index.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":25},"end":{"line":37,"column":1}},"2":{"start":{"line":4,"column":4},"end":{"line":36,"column":7}},"3":{"start":{"line":5,"column":40},"end":{"line":5,"column":53}},"4":{"start":{"line":6,"column":32},"end":{"line":6,"column":39}},"5":{"start":{"line":7,"column":8},"end":{"line":11,"column":9}},"6":{"start":{"line":8,"column":12},"end":{"line":10,"column":15}},"7":{"start":{"line":12,"column":30},"end":{"line":12,"column":125}},"8":{"start":{"line":13,"column":8},"end":{"line":35,"column":9}},"9":{"start":{"line":14,"column":25},"end":{"line":14,"column":78}},"10":{"start":{"line":15,"column":12},"end":{"line":26,"column":13}},"11":{"start":{"line":16,"column":16},"end":{"line":20,"column":18}},"12":{"start":{"line":23,"column":16},"end":{"line":25,"column":19}},"13":{"start":{"line":29,"column":12},"end":{"line":29,"column":33}},"14":{"start":{"line":30,"column":12},"end":{"line":30,"column":31}},"15":{"start":{"line":31,"column":12},"end":{"line":31,"column":39}},"16":{"start":{"line":32,"column":12},"end":{"line":34,"column":15}},"17":{"start":{"line":38,"column":0},"end":{"line":38,"column":35}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":3,"column":25},"end":{"line":3,"column":26}},"loc":{"start":{"line":3,"column":50},"end":{"line":37,"column":1}},"line":3},"1":{"name":"(anonymous_1)","decl":{"start":{"line":4,"column":21},"end":{"line":4,"column":22}},"loc":{"start":{"line":4,"column":53},"end":{"line":36,"column":5}},"line":4}},"branchMap":{"0":{"loc":{"start":{"line":7,"column":8},"end":{"line":11,"column":9}},"type":"if","locations":[{"start":{"line":7,"column":8},"end":{"line":11,"column":9}},{"start":{"line":7,"column":8},"end":{"line":11,"column":9}}],"line":7},"1":{"loc":{"start":{"line":7,"column":12},"end":{"line":7,"column":35}},"type":"binary-expr","locations":[{"start":{"line":7,"column":12},"end":{"line":7,"column":21}},{"start":{"line":7,"column":25},"end":{"line":7,"column":35}}],"line":7},"2":{"loc":{"start":{"line":12,"column":37},"end":{"line":12,"column":124}},"type":"cond-expr","locations":[{"start":{"line":12,"column":67},"end":{"line":12,"column":94}},{"start":{"line":12,"column":97},"end":{"line":12,"column":124}}],"line":12},"3":{"loc":{"start":{"line":15,"column":12},"end":{"line":26,"column":13}},"type":"if","locations":[{"start":{"line":15,"column":12},"end":{"line":26,"column":13}},{"start":{"line":15,"column":12},"end":{"line":26,"column":13}}],"line":15},"4":{"loc":{"start":{"line":24,"column":27},"end":{"line":24,"column":84}},"type":"cond-expr","locations":[{"start":{"line":24,"column":40},"end":{"line":24,"column":50}},{"start":{"line":24,"column":53},"end":{"line":24,"column":84}}],"line":24}},"s":{"0":1,"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1},"f":{"0":1,"1":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"inputSourceMap":{"version":3,"file":"/home/burgardt/projects/challenge/temperature-project/src/routes/temperature/index.ts","sources":["/home/burgardt/projects/challenge/temperature-project/src/routes/temperature/index.ts"],"names":[],"mappings":";;AAEA,MAAM,gBAAgB,GAAuB,KAAK,EAAE,OAAO,EAAE,IAAI,EAAiB,EAAE;IAClF,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,WAAW,OAAY,EAAE,KAAK;QAClD,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,OAAO,CAAC,KAAK,CAAC;QAC9C,MAAM,EAAE,WAAW,EAAE,GAAG,OAAO,CAAC;QAEhC,IAAI,CAAC,QAAQ,IAAI,CAAC,SAAS,EAAE;YAC3B,OAAO,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBAC1B,KAAK,EAAE,qCAAqC;aAC7C,CAAC,CAAA;SACH;QAED,MAAM,aAAa,GAAG,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QAEtH,IAAI;YACF,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC,cAAc,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;YAEnE,IAAI,IAAI,CAAC,IAAI,EAAE;gBACb,OAAO;oBACL,aAAa;oBACb,YAAY,EAAE,IAAI,CAAC,IAAI;oBACvB,SAAS,EAAE,IAAI,CAAC,IAAI,GAAG,aAAa;iBACrC,CAAA;aACF;iBAAM;gBACL,OAAO,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;oBAC1B,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,+BAA+B;iBACjE,CAAC,CAAA;aACH;SACF;QAAC,OAAO,KAAU,EAAE;YACnB,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAA;YACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA;YAClB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAA;YAC1B,OAAO,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBAC1B,KAAK,EAAE,KAAK,CAAC,OAAO;aACrB,CAAC,CAAA;SACH;IACH,CAAC,CAAC,CAAA;AACJ,CAAC,CAAA;AAID,kBAAe,gBAAgB,CAAC","sourcesContent":["import { FastifyPluginAsync } from \"fastify\"\n\nconst temperatureRoute: FastifyPluginAsync = async (fastify, opts): Promise<void> => {\n  fastify.get('/', async function (request: any, reply) {\n    const { latitude, longitude } = request.query;\n    const { openweather } = fastify;\n\n    if (!latitude || !longitude) {\n      return reply.code(400).send({\n        error: 'latitude and longitude are required'\n      })\n    }\n\n    const tempToCompare = Number(request.query.tempToCompare ? request.query.tempToCompare : process.env.TEMP_TO_COMPARE);\n\n    try {\n      const resp = await openweather.getTemperature(latitude, longitude);\n  \n      if (resp.temp) {\n        return {\n          tempToCompare,\n          searchedTemp: resp.temp,\n          isGreater: resp.temp > tempToCompare\n        }\n      } else {\n        return reply.code(400).send({\n          error: resp.error ? resp.error : 'Invalid latitude or longitude'\n        })\n      }\n    } catch (error: any) {\n      console.log(\"error\")\n      console.log(error)\n      console.log(error.message)\n      return reply.code(500).send({\n        error: error.message\n      })\n    }\n  })\n}\n\n\n\nexport default temperatureRoute;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"687dfd41562cdea3f41df21c062330d79219122d","contentHash":"5b4ad6cd5ef34a86d4a6f42fac746fb162e6ce8b7d905de8ab21cd1e0b101820"}}